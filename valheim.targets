<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Find GamePath -->
  <Choose>
    <When Condition="($(OS) == 'Unix' OR $(OS) == 'OSX') AND $(GamePath) == ''">
      <PropertyGroup>
        <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/.steam/steam/steamapps/common/Valheim</GamePath>
        <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/Library/Application Support/Steam/steamapps/common/Valheim/Contents/MacOS</GamePath>
      </PropertyGroup>
    </When>
    <When Condition="($(OS) == 'Windows_NT') AND $(GamePath) == ''">
      <PropertyGroup>
        <GamePath Condition="!Exists('$(GamePath)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 892970', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>
        <_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
        <GamePath Condition="!Exists('$(GamePath)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\Valheim</GamePath>
        <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\Valheim</GamePath>
        <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\Valheim</GamePath>
      </PropertyGroup>
    </When>
  </Choose>

  <!-- Manual overrides -->
  <PropertyGroup>
    <ManagedDataPath>$(GamePath)\valheim_Data\Managed</ManagedDataPath>
  </PropertyGroup>

  <!-- Add valheim_data references -->
  <ItemGroup Label="Valheim_Data">
    <Reference Include="assembly_valheim">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedDataPath)\assembly_valheim.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="assembly_googleanalytics">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedDataPath)\assembly_googleanalytics.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="assembly_guiutils">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedDataPath)\assembly_guiutils.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="assembly_lux">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedDataPath)\assembly_lux.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="assembly_postprocessing">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedDataPath)\assembly_postprocessing.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="assembly_simplemeshcombine">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedDataPath)\assembly_simplemeshcombine.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="assembly_sunshafts">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedDataPath)\assembly_sunshafts.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="assembly_utils">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedDataPath)\assembly_utils.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="com.rlabrecque.steamworks.net">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(ManagedDataPath)\com.rlabrecque.steamworks.net.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>

  <!-- Copy to plugins folder and zip -->
<!--
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <ItemGroup>
      <AllFiles Include="$(TargetDir)**\*.*" Exclude="$(TargetDir)**\*.pdb" />
    </ItemGroup>
    <Copy SourceFiles="$(TargetDir)$(ProjectName).dll" DestinationFolder="$(GamePath)\BepInEx\plugins\test\%(RecursiveDir)"></Copy>
    <Delete Files="$(ProjectDir)\bin\$(TargetName).zip" />
    <Copy SourceFiles="$(TargetDir)$(ProjectName).dll" DestinationFolder="$(TargetDir)..\Release\%(RecursiveDir)"></Copy>
    <ZipDirectory SourceDirectory="$(TargetDir)..\Release" DestinationFile="$(ProjectDir)\bin\$(TargetName).zip" />
    <RemoveDir Directories="$(TargetDir)..\Release" />
  </Target>
-->
</Project>